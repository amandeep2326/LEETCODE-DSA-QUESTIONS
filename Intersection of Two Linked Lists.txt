/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    int length(ListNode *head){
        int count=0;
        ListNode* temp=head;
        while(temp!=NULL){
            temp=temp->next;
            count++;
        }
        return count;
    }
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        int l1=length(headA);
        int l2=length(headB);
        ListNode* p1;
        ListNode* p2;
        int d=0;
        if(l1>l2){
            d=l1-l2;
            p1=headA;
            p2=headB;
        }
        else{
            d=l2-l1;
            p2=headA;
            p1=headB;
        }
        while(d){
            p1=p1->next;
            if(p1==NULL){
                return NULL;
            }
            d--;
        }
        while(p1!=NULL&&p2!=NULL){
            if(p1==p2){
                return p1;
            }
            p1=p1->next;
            p2=p2->next;
        }
        return NULL;
    }
};
